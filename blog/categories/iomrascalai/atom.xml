<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iomrascálaí | Urban Hafner]]></title>
  <link href="http://bettong.net/blog/categories/iomrascalai/atom.xml" rel="self"/>
  <link href="http://bettong.net/"/>
  <updated>2015-12-07T18:00:44+01:00</updated>
  <id>http://bettong.net/</id>
  <author>
    <name><![CDATA[Urban Hafner]]></name>
    <email><![CDATA[contact@urbanhafner.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Iomrascálaí 0.3.0 released]]></title>
    <link href="http://bettong.net/2015/12/07/iomrascalai-0-dot-3-0-released/"/>
    <updated>2015-12-07T17:29:23+01:00</updated>
    <id>http://bettong.net/2015/12/07/iomrascalai-0-dot-3-0-released</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a while since I wrote about <a href="https://github.com/ujh/iomrascalai">Iomrascálaí</a> the engine for the <a href="https://en.wikipedia.org/wiki/Go_(game)">game of Go</a> I&rsquo;m writing in Rust. I will try to do it a bit more often from now on as I&rsquo;ve finally found the motivation to work on it again.</p>

<p>So today I&rsquo;d like to announce <a href="https://github.com/ujh/iomrascalai/releases/tag/0.3.0">version 0.3.0</a>! It&rsquo;s been in the works since September and included two big improvements:</p>

<ol>
<li>We&rsquo;re now using the RAVE heuristic in selecting which tree leaf to investigate next.</li>
<li>We use a set of 3x3 patterns to guide both the tree exploration and the move selection in the playouts.</li>
</ol>


<p>These two changes together lead to a strength increase when playing against GnuGo of <em>~20% on 9x9</em> and <em>~25% on 13x13</em>! See the <a href="https://github.com/ujh/iomrascalai/releases/tag/0.3.0">release notes</a> and the <a href="https://github.com/ujh/iomrascalai/blob/master/CHANGELOG.md">change log</a> for detailed listings of what actually changed between 0.2.4 and 0.3.0.</p>

<h2>The plan for 0.4</h2>

<p>The main goal for 0.4 is to finally get close to equal strength with GnuGo on 19x19. A bit task but where&rsquo;s the fun in picking easy tasks? ;) To achieve this goal I&rsquo;m planning to work on the following issues:</p>

<ol>
<li><a href="https://github.com/ujh/iomrascalai/issues/201">Speed up the playouts</a>! Just 100 playouts per second on 19x19 is really slow and it&rsquo;s no wonder that the engine has no chance against GnuGo.</li>
<li><a href="https://github.com/ujh/iomrascalai/issues/210">Add criticality to tree selection algorithm</a>. Apparently both Pachi and CrazyStone have had success with adding this as an additional term to the formula.</li>
<li><a href="https://github.com/ujh/iomrascalai/issues/200">Tune the parameters using CLOP</a>. I&rsquo;ve moved the parameters into a config file so at least technically it&rsquo;s now easy to run experiments and optimize the parameters.</li>
<li><a href="https://github.com/ujh/iomrascalai/issues/209">Continue searching when the results are unclear</a>. Various engines have had success with searching longer than the allocated time when the best move isn&rsquo;t clear (i.e. close to the second best move).</li>
<li><a href="https://github.com/ujh/iomrascalai/issues/231">Use larger patterns</a>. Until now the engine only uses 3x3 patterns. It seems worthwhile to investigate if using larger patterns can help.</li>
<li><a href="https://github.com/ujh/iomrascalai/issues/234">Use a DCNN to guide the search</a>. There&rsquo;s a pre-trained neural network that&rsquo;s in use by several engines to guide the search and it has improved the results significantly for them. It may be a good idea to investigate this, too.</li>
</ol>


<h2>Challenges</h2>

<ol>
<li>The main challenge is computation power! Running 500 games for 9x9 and 13x13 each already takes a few days. And adding 19x19 to the mix will mean that changes will take a long time to benchmark.</li>
<li>The libraries to efficiently run the DCNN code (like Caffe of Tensorflow) have quite a lot of dependencies and it&rsquo;s not clear how easily they can be integrated with Rust. It will at least make compiling the bot more difficult for newcomers.</li>
</ol>


<p>Like I said, quite a challenging plan! But I&rsquo;m sure it will be a lot of fun. I will leave you with a link to talk by <a href="https://pragtob.wordpress.com/2015/11/21/slides-beating-go-thanks-to-the-power-of-randomness-rubyconf-2015/">Tobias Pfeiffer about computer Go</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Iomrascálaí: A great way to learn Rust or about AI]]></title>
    <link href="http://bettong.net/2015/01/07/iomrascalai-a-great-way-to-learn-rust-or-about-ai/"/>
    <updated>2015-01-07T09:08:35+01:00</updated>
    <id>http://bettong.net/2015/01/07/iomrascalai-a-great-way-to-learn-rust-or-about-ai</id>
    <content type="html"><![CDATA[<p><img src="/images/rust.png">
I wrote about <a href="https://github.com/ujh/iomrascalai">Iomrascálaí</a>, my
personal project to learn <a href="http://www.rust-lang.org/">Rust</a> by writing
an artificial intelligence for the
<a href="http://en.wikipedia.org/wiki/Go_(game)">game of Go</a>,
<a href="/2014/04/29/introducting-iomrascalai/">on here before</a>. Since then
it&rsquo;s gone rather quiet as I haven&rsquo;t had much time to work on it. We
bought a house and moved in, I got a new job, my wife started a new
job, it&rsquo;s winter so the kids get sick all the time &hellip;</p>

<!-- more -->


<p>Now that things have <em>slightly</em> settled down I&rsquo;m ready to continue
with this project. And this is why I&rsquo;m writing this blog post. If
there&rsquo;s anyone out there who either wants to learn Rust or learn about
artificial intelligence then you&rsquo;re welcome to help out with this
project. I knew nothing about Rust when I started this project, but
that didn&rsquo;t stop <a href="https://github.com/TisButMe">Thomas P</a> from joining
and essentially teaching me Rust. I&rsquo;m very greatful and I&rsquo;d like to
pay it forward by doing the same. So just have a look at the
<a href="https://github.com/ujh/iomrascalai/issues">Github issue tracker</a>, and
ask what do work on either in the
<a href="https://gitter.im/ujh/iomrascalai">chat</a> or in the
<a href="https://groups.google.com/forum/#!forum/iomrascalai">Google Group</a>.</p>

<p>And if you&rsquo;re interested in artificial intelligence then this could be
interesting for you, too. After all, the goal is to write a program
that is good a playing this game!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to test Rust on Travis CI]]></title>
    <link href="http://bettong.net/2014/05/09/how-to-test-rust-on-travis-ci/"/>
    <updated>2014-05-09T16:07:51+02:00</updated>
    <id>http://bettong.net/2014/05/09/how-to-test-rust-on-travis-ci</id>
    <content type="html"><![CDATA[<p>Working with Ruby on Rails in my projects I&rsquo;m used to running continuous integration on <a href="https://travis-ci.org/">Travis CI</a>. As this is free of charge for open source projects projects I wanted to set it up for my Rust project <a href="https://github.com/ujh/iomrascalai">Iomrascálaí</a>, too.</p>

<p>At first I used the setup provided by <a href="http://www.rust-ci.org/help/">Rust CI</a>, but as the project page doesn&rsquo;t seem to be working 100% anymore and because the Debian package they provide of the rust nightly snapshot for some reason strips the Rust version number I decided to use the official nightly snapshots instead.</p>

<!-- more -->


<p>It was actually quite easy to do and if you want to test your Rust project on Travis CI yourself just drop that file into your project folder and adjust the last line to run your tests!</p>

<pre><code class="yaml .travis.yml">language: c
install:
  - curl -O http://static.rust-lang.org/dist/rust-nightly-x86_64-unknown-linux-gnu.tar.gz
  - tar xfz rust-nightly-x86_64-unknown-linux-gnu.tar.gz
  - (cd rust-nightly-x86_64-unknown-linux-gnu/ &amp;&amp; sudo ./install.sh)
script:
  - rustc --version
  - make
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introducting Iomrascálaí]]></title>
    <link href="http://bettong.net/2014/04/29/introducting-iomrascalai/"/>
    <updated>2014-04-29T08:51:04+02:00</updated>
    <id>http://bettong.net/2014/04/29/introducting-iomrascalai</id>
    <content type="html"><![CDATA[<p>or <em>&ldquo;Help me learn Rust by pairing with me&rdquo;</em></p>

<p>After years working in interpreted languages (Ruby, JavaScript) I recently discovered <a href="http://www.rust-lang.org/">Rust</a>. As I sadly don&rsquo;t have the opportunity to use Rust directly in a client project, I decided to come up with a toy project to help me learn the language.</p>

<p>As Rust is supposedly good for programs that actually need raw speed (unlike the web apps I generally write) I decided to come back to one of my old time favourites: an artificial intelligence for the <a href="http://en.wikipedia.org/wiki/Go_(game)">game of Go</a>.</p>

<p>I had already tried writing a few of those in recent years (including helping <a href="https://github.com/ujh/housebot">Jason House with his bot written in D</a>), but every time I had the problem that working alone wasn&rsquo;t very motivating so I never managed to produce a working program.</p>

<p>To combat this I&rsquo;m trying to pair program with people (i.e. <em>you</em>) to keep me going. So if you&rsquo;re interested in either learning Rust with me or writing an AI for the game of Go, <a href="mailto:contact@urbanhafner.com">please get in touch</a>!</p>

<!-- more -->


<p>Currently (as of April 2014) the project is still in it&rsquo;s infancy (actually no code was written, yet), but please check out the <a href="https://github.com/ujh/iomrascalai">repository</a> and <a href="https://trello.com/b/NU4MXbao/iomrascalai">Trello board</a>.</p>

<p>If you&rsquo;re new to Rust I suggest the <a href="http://static.rust-lang.org/doc/master/intro.html">30-minute Introduction to Rust</a>, <a href="http://static.rust-lang.org/doc/master/tutorial.html">The Rust Language Tutorial</a>, and <a href="http://rustbyexample.com/">Rust by Example</a> as a start. If you&rsquo;re new to the game of Go &hellip; well there&rsquo;s <a href="http://senseis.xmp.net/">a whole Wiki about it</a>! And for computer go related content the best place is the <a href="http://dvandva.org/pipermail/computer-go/">computer-go mailing list</a>.</p>

<p><em>So, please get in touch so that we can get this started!</em></p>
]]></content>
  </entry>
  
</feed>
